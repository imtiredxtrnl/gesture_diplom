# server/init_data.py
import json
import os
from datetime import datetime

def create_default_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    os.makedirs('data/gestures', exist_ok=True)
    os.makedirs('data/alphabet/uk', exist_ok=True)
    os.makedirs('data/alphabet/en', exist_ok=True)
    os.makedirs('data/tests', exist_ok=True)

    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    default_users = {
        "user@example.com": {
            "password": "user123",
            "name": "User",
            "photo": "",
            "role": "user",
            "completedTests": []
        },
        "admin@example.com": {
            "password": "admin123",
            "name": "Admin",
            "photo": "",
            "role": "admin",
            "completedTests": []
        }
    }

    # –ñ–µ—Å—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    default_gestures = {
        "gesture_1": {
            "id": "gesture_1",
            "name": "–ü—Ä–∏–≤–µ—Ç",
            "description": "–ñ–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. –ü–æ–¥–Ω–∏–º–∏—Ç–µ —Ä—É–∫—É —Å —Ä–∞—Å–∫—Ä—ã—Ç–æ–π –ª–∞–¥–æ–Ω—å—é –∏ –ø–æ–º–∞—à–∏—Ç–µ –µ–π –∏–∑ —Å—Ç–æ—Ä–æ–Ω—ã –≤ —Å—Ç–æ—Ä–æ–Ω—É.",
            "category": "greetings",
            "imagePath": "assets/gestures/hello.png",
            "created_at": datetime.now().isoformat()
        },
        "gesture_2": {
            "id": "gesture_2",
            "name": "–°–ø–∞—Å–∏–±–æ",
            "description": "–ñ–µ—Å—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏. –ü—Ä–∏–∫–æ—Å–Ω–∏—Ç–µ—Å—å –∫–æ–Ω—á–∏–∫–∞–º–∏ –ø–∞–ª—å—Ü–µ–≤ –∫ –≥—É–±–∞–º, –∑–∞—Ç–µ–º –æ–ø—É—Å—Ç–∏—Ç–µ —Ä—É–∫—É –≤–ø–µ—Ä–µ–¥.",
            "category": "basic",
            "imagePath": "assets/gestures/thank_you.png",
            "created_at": datetime.now().isoformat()
        },
        "gesture_3": {
            "id": "gesture_3",
            "name": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞",
            "description": "–ñ–µ—Å—Ç –≤–µ–∂–ª–∏–≤–æ–π –ø—Ä–æ—Å—å–±—ã. –ü–æ–ª–æ–∂–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—É—é –ª–∞–¥–æ–Ω—å –Ω–∞ –≥—Ä—É–¥—å –∏ —Å–¥–µ–ª–∞–π—Ç–µ –∫—Ä—É–≥–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ.",
            "category": "basic",
            "imagePath": "assets/gestures/please.png",
            "created_at": datetime.now().isoformat()
        },
        "gesture_4": {
            "id": "gesture_4",
            "name": "–î–∞",
            "description": "–ñ–µ—Å—Ç —Å–æ–≥–ª–∞—Å–∏—è. –ü–æ–∫–∞–∂–∏—Ç–µ –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö –∏–ª–∏ –∫–∏–≤–Ω–∏—Ç–µ –≥–æ–ª–æ–≤–æ–π –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑.",
            "category": "basic",
            "imagePath": "assets/gestures/yes.png",
            "created_at": datetime.now().isoformat()
        },
        "gesture_5": {
            "id": "gesture_5",
            "name": "–ù–µ—Ç",
            "description": "–ñ–µ—Å—Ç –æ—Ç—Ä–∏—Ü–∞–Ω–∏—è. –ü–æ–∫–∞—á–∞–π—Ç–µ –≥–æ–ª–æ–≤–æ–π –∏–∑ —Å—Ç–æ—Ä–æ–Ω—ã –≤ —Å—Ç–æ—Ä–æ–Ω—É –∏–ª–∏ –ø–æ–∫–∞–∂–∏—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–∞–ª—å—Ü–µ–º.",
            "category": "basic",
            "imagePath": "assets/gestures/no.png",
            "created_at": datetime.now().isoformat()
        },
        "gesture_6": {
            "id": "gesture_6",
            "name": "–•–æ—Ä–æ—à–æ",
            "description": "–ñ–µ—Å—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –∫–æ–ª—å—Ü–æ –∏–∑ –±–æ–ª—å—à–æ–≥–æ –∏ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–ª—å—Ü–∞ (–∑–Ω–∞–∫ –û–ö).",
            "category": "emotions",
            "imagePath": "assets/gestures/ok.png",
            "created_at": datetime.now().isoformat()
        }
    }

    # –¢–µ—Å—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    default_tests = {
        "test_1": {
            "id": "test_1",
            "question": "–ö–∞–∫–æ–π –∂–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è?",
            "options": [
                "–ü–æ–¥–Ω—è—Ç–∞—è —Ä—É–∫–∞ —Å —Ä–∞—Å–∫—Ä—ã—Ç–æ–π –ª–∞–¥–æ–Ω—å—é",
                "–°–∂–∞—Ç—ã–π –∫—É–ª–∞–∫",
                "–£–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö",
                "–î–≤–µ —Ä—É–∫–∏ —Å–∫—Ä–µ—â–µ–Ω—ã –Ω–∞ –≥—Ä—É–¥–∏"
            ],
            "correctOptionIndex": 0,
            "category": "greetings",
            "imagePath": "assets/tests/test1.png",
            "created_at": datetime.now().isoformat()
        },
        "test_2": {
            "id": "test_2",
            "question": "–ö–∞–∫ –ø–æ–∫–∞–∑–∞—Ç—å –∂–µ—Å—Ç '–°–ø–∞—Å–∏–±–æ'?",
            "options": [
                "–°–∂–∞—Ç—ã–π –∫—É–ª–∞–∫",
                "–†—É–∫–∞ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –∫ –≥—É–±–∞–º –∏ –æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–ø–µ—Ä–µ–¥",
                "–†—É–∫–∏ —Å–∫—Ä–µ—â–µ–Ω—ã –Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π",
                "–ë–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö"
            ],
            "correctOptionIndex": 1,
            "category": "basic",
            "imagePath": "assets/tests/test2.png",
            "created_at": datetime.now().isoformat()
        },
        "test_3": {
            "id": "test_3",
            "question": "–ö–∞–∫–æ–π –∂–µ—Å—Ç –æ–∑–Ω–∞—á–∞–µ—Ç '–î–∞'?",
            "options": [
                "–ö–∞—á–∞–Ω–∏–µ –≥–æ–ª–æ–≤–æ–π –≤–ª–µ–≤–æ-–≤–ø—Ä–∞–≤–æ",
                "–ö–∏–≤–∞–Ω–∏–µ –≥–æ–ª–æ–≤–æ–π –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑",
                "–ü–æ–¥–Ω—è—Ç–∏–µ –ø–ª–µ—á",
                "–£–∫–∞–∑–∞–Ω–∏–µ –ø–∞–ª—å—Ü–µ–º"
            ],
            "correctOptionIndex": 1,
            "category": "basic",
            "imagePath": "assets/tests/test3.png",
            "created_at": datetime.now().isoformat()
        },
        "test_4": {
            "id": "test_4",
            "question": "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∂–µ—Å—Ç '–•–æ—Ä–æ—à–æ'?",
            "options": [
                "–ë–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü –≤–Ω–∏–∑",
                "–°–∂–∞—Ç—ã–π –∫—É–ª–∞–∫",
                "–ö–æ–ª—å—Ü–æ –∏–∑ –±–æ–ª—å—à–æ–≥–æ –∏ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–ª—å—Ü–∞",
                "–û—Ç–∫—Ä—ã—Ç–∞—è –ª–∞–¥–æ–Ω—å"
            ],
            "correctOptionIndex": 2,
            "category": "emotions",
            "imagePath": "assets/tests/test4.png",
            "created_at": datetime.now().isoformat()
        }
    }

    # –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    ukrainian_letters = ['–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Ñ', '–ñ', '–ó', '–ò', '–Ü', '–á', '–ô', '–ö', '–õ']
    default_alphabet = {}

    for i, letter in enumerate(ukrainian_letters):
        letter_id = f"uk_{letter.lower()}"
        default_alphabet[letter_id] = {
            "id": letter_id,
            "letter": letter,
            "language": "uk",
            "imagePath": f"assets/alphabet/uk/{letter.lower()}.png",
            "created_at": datetime.now().isoformat()
        }

    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç (–ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±—É–∫–≤)
    english_letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M']

    for i, letter in enumerate(english_letters):
        letter_id = f"en_{letter.lower()}"
        default_alphabet[letter_id] = {
            "id": letter_id,
            "letter": letter,
            "language": "en",
            "imagePath": f"assets/alphabet/en/{letter.lower()}.png",
            "created_at": datetime.now().isoformat()
        }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
    with open('users.json', 'w', encoding='utf-8') as f:
        json.dump(default_users, f, indent=4, ensure_ascii=False)

    with open('gestures.json', 'w', encoding='utf-8') as f:
        json.dump(default_gestures, f, indent=4, ensure_ascii=False)

    with open('tests.json', 'w', encoding='utf-8') as f:
        json.dump(default_tests, f, indent=4, ensure_ascii=False)

    with open('alphabet.json', 'w', encoding='utf-8') as f:
        json.dump(default_alphabet, f, indent=4, ensure_ascii=False)

    print("‚úÖ –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–Ω—ã:")
    print("   - users.json")
    print("   - gestures.json")
    print("   - tests.json")
    print("   - alphabet.json")
    print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
    print("   –ê–¥–º–∏–Ω: admin@example.com / admin123")
    print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@example.com / user123")

if __name__ == "__main__":
    create_default_data()